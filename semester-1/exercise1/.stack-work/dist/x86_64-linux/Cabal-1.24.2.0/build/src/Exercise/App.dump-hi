
==================== FINAL INTERFACE ====================
2017-12-01 18:55:45.121262 UTC

interface exercise1-0.1.0.0-7bAbtm6tHPS587I51PvjTx:Exercise.App 8002
  interface hash: 1f42044e05076f1b8520efdca64cfad9
  ABI hash: 7138b17e940f4393c771ca566ad310f0
  export-list hash: 0519816c3ac32f925a26f627409482ac
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6941e8a3e48dba60ef78b14284373735
  sig of: Nothing
  used TH splices: False
  where
exports:
  Exercise.App.run
module dependencies: Exercise.Basic Exercise.Monadic
                     Exercise.Recursive
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  Exercise.Basic 978c34f5fa316b09414125654c977089
  exports: 79338724d1c39b9638f05f06a25be446
  numberOne 5362562427a772624b3783e83198a809
  numberTwo 9d1204b460f3c45ebe89ec6ff3ff7c82
import  -/  Exercise.Monadic b734059704c06a111ea52196b501edf7
  exports: a3c8d221eca7664efec6a84900e81498
  numberThree 52c49739e7f1f3ede47e8c05d9c7f5a4
import  -/  Exercise.Recursive 6852dd321e2d0c48b470373e4606032a
  exports: 0a3a8e7cc48b8c65a5010c1102b5c565
  numberThree 0de33f0fbdb941349bc00198ffc801c8
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
973d390d03aaebcbf1217662c84484b8
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Exercise.App.$trModule2
                   Exercise.App.$trModule1) -}
9aad6b1829ec454951bfdb572d2f28a4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Exercise.App"#) -}
df06a42baf0f548c66f50725a4fa17ed
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "exercise1-0.1.0.0-7bAbtm6tHPS587I51PvjTx"#) -}
4910b7487986b75b928e2ae4b3f218e7
  run :: [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Exercise.App.run1
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
fe3594b0e11fc00315a448c47dac1844
  run1 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (ds :: [GHC.Base.String])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild {
                   [] -> Exercise.Basic.numberOne1 eta
                   : t ds1
                   -> case GHC.Base.eqString t Exercise.App.run6 of wild1 {
                        GHC.Types.False
                        -> case GHC.Base.eqString t Exercise.App.run5 of wild2 {
                             GHC.Types.False
                             -> case GHC.Base.eqString t Exercise.App.run4 of wild3 {
                                  GHC.Types.False
                                  -> case GHC.Base.eqString t Exercise.App.run3 of wild4 {
                                       GHC.Types.False
                                       -> case GHC.Base.eqString t Exercise.App.run2 of wild5 {
                                            GHC.Types.False -> Exercise.Basic.numberOne1 eta
                                            GHC.Types.True -> Exercise.Monadic.numberThree1 eta }
                                       GHC.Types.True
                                       -> Exercise.Recursive.numberThree2
                                            (GHC.Types.[] @ GHC.Types.Char)
                                            eta }
                                  GHC.Types.True
                                  -> Exercise.Recursive.numberThree2
                                       (GHC.Types.[] @ GHC.Types.Char)
                                       eta }
                             GHC.Types.True -> Exercise.Basic.numberTwo1 eta }
                        GHC.Types.True -> Exercise.Basic.numberOne1 eta } }) -}
d62ecb664d5e0563f23c704144ecb6cf
  run2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "3b"#) -}
6d6f986e3d29428fd22f499cc78b88fd
  run3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "3a"#) -}
523094190fbc444ca2bbe8a08b622b0b
  run4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "3"#) -}
7af4e89d435f79a9f581f0264fd809db
  run5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "2"#) -}
a0fe25bca11d7f918e2a6a72fc309be4
  run6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

