
==================== FINAL INTERFACE ====================
2017-12-01 18:50:25.785443 UTC

interface exercise1-0.1.0.0-7bAbtm6tHPS587I51PvjTx:Exercise.Basic 8002
  interface hash: f982bd72b2cd962ecda03c9747c2367b
  ABI hash: 978c34f5fa316b09414125654c977089
  export-list hash: 79338724d1c39b9638f05f06a25be446
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6941e8a3e48dba60ef78b14284373735
  sig of: Nothing
  used TH splices: False
  where
exports:
  Exercise.Basic.numberOne
  Exercise.Basic.numberTwo
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO.Handle ba98a5b34d78cbf48b41fe58a3735c69
import  -/  base-4.9.1.0:GHC.IO.Handle.FD dbf0d0d4f42ab1465129a88ccf7880ff
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
862b89a858df30274c34529fb2053e25
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Exercise.Basic.$trModule2
                   Exercise.Basic.$trModule1) -}
4da8bcf8886fd8934f7c24c5100a0a10
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Exercise.Basic"#) -}
60fbac02846cdef7ab0f93fcd954c983
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "exercise1-0.1.0.0-7bAbtm6tHPS587I51PvjTx"#) -}
5362562427a772624b3783e83198a809
  numberOne :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Exercise.Basic.numberOne1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
8b322e0de68fe3e0ec87fd6771cfe640
  numberOne1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Exercise.Basic.numberOne2
                   GHC.Types.True
                   eta) -}
79630e30bda77933ce6ce36907a4187e
  numberOne2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Hello World"#) -}
9d1204b460f3c45ebe89ec6ff3ff7c82
  numberTwo :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Exercise.Basic.numberTwo1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
1ea97ff9ad762ccc7acd4ccfdc09b161
  numberTwo1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Exercise.Basic.numberTwo2
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Internals.wantWritableHandle1
                        @ ()
                        GHC.IO.Handle.hFlush2
                        GHC.IO.Handle.FD.stdout
                        GHC.IO.Handle.Internals.flushWriteBuffer1
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.CString.unpackAppendCString# "Nice to meet you "# ipv5)
                   GHC.Types.True
                   ipv4 } } }) -}
1f519ffb1980eb8f6daa3fe1454124b6
  numberTwo2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Hello, what is your name?"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

